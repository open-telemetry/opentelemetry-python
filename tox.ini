[tox]
skipsdist = True
skip_missing_interpreters = True
envlist =
    py3{4,5,6,7,8}-test-{api,sdk,example-app,ext-wsgi,ext-flask,ext-http-requests,ext-jaeger,ext-pymongo,opentracing-shim}
    pypy3-test-{api,sdk,example-app,ext-wsgi,ext-flask,ext-http-requests,ext-jaeger,ext-pymongo,opentracing-shim}
    py3{4,5,6,7,8}-test-{api,sdk,example-app,example-basic-tracer,example-http,ext-wsgi,ext-flask,ext-http-requests,ext-jaeger,ext-pymongo,opentracing-shim}
    pypy3-test-{api,sdk,example-app,example-basic-tracer,example-http,ext-wsgi,ext-flask,ext-http-requests,ext-jaeger,ext-pymongo,opentracing-shim}
    py3{4,5,6,7,8}-coverage

    ; Coverage is temporarily disabled for pypy3 due to the pytest bug.
    ; pypy3-coverage

    lint
    py37-tracecontext
    py37-{mypy,mypyinstalled}
    docs

[travis]
python =
  3.7: py37, lint, docs

[testenv]
deps =
  test: pytest
  coverage: pytest
  coverage: pytest-cov
  mypy,mypyinstalled: mypy==0.740

setenv =
  mypy: MYPYPATH={toxinidir}/opentelemetry-api/src/

changedir =
  test-api: opentelemetry-api/tests
  test-sdk: opentelemetry-sdk/tests
  test-ext-http-requests: ext/opentelemetry-ext-http-requests/tests
  test-ext-jaeger: ext/opentelemetry-ext-jaeger/tests
  test-ext-pymongo: ext/opentelemetry-ext-pymongo/tests
  test-ext-wsgi: ext/opentelemetry-ext-wsgi/tests
  test-ext-flask: ext/opentelemetry-ext-flask/tests
  test-example-app: examples/opentelemetry-example-app/tests
  test-example-basic-tracer: examples/basic_tracer/tests
  test-example-http: examples/http/tests
  test-opentracing-shim: ext/opentelemetry-ext-opentracing-shim/tests

commands_pre =
; Install without -e to test the actual installation
  python -m pip install -U pip setuptools wheel
  test: pip install {toxinidir}/opentelemetry-api
  test-sdk: pip install {toxinidir}/opentelemetry-sdk
  example-app: pip install {toxinidir}/opentelemetry-sdk
  example-app: pip install {toxinidir}/ext/opentelemetry-ext-http-requests
  example-app: pip install {toxinidir}/ext/opentelemetry-ext-wsgi
  example-app: pip install {toxinidir}/ext/opentelemetry-ext-flask
  example-app: pip install {toxinidir}/examples/opentelemetry-example-app
  example-basic-tracer: pip install -e {toxinidir}/opentelemetry-api
  example-basic-tracer: pip install -e {toxinidir}/opentelemetry-sdk
  example-http: pip install -e {toxinidir}/opentelemetry-api
  example-http: pip install -e {toxinidir}/opentelemetry-sdk
  example-http: pip install -e {toxinidir}/ext/opentelemetry-ext-http-requests
  example-http: pip install -e {toxinidir}/ext/opentelemetry-ext-wsgi
  example-http: pip install -r {toxinidir}/examples/http/requirements.txt

  ext: pip install {toxinidir}/opentelemetry-api
  wsgi,flask: pip install {toxinidir}/ext/opentelemetry-ext-testutil
  wsgi,flask: pip install {toxinidir}/ext/opentelemetry-ext-wsgi
  flask: pip install {toxinidir}/ext/opentelemetry-ext-flask[test]
  pymongo: pip install {toxinidir}/ext/opentelemetry-ext-pymongo
  http-requests: pip install {toxinidir}/ext/opentelemetry-ext-http-requests
  jaeger: pip install {toxinidir}/opentelemetry-sdk
  jaeger: pip install {toxinidir}/ext/opentelemetry-ext-jaeger
  opentracing-shim: pip install {toxinidir}/opentelemetry-sdk {toxinidir}/ext/opentelemetry-ext-opentracing-shim

; In order to get a healthy coverage report,
; we have to install packages in editable mode.
  coverage: pip install -e {toxinidir}/opentelemetry-api
  coverage: pip install -e {toxinidir}/opentelemetry-sdk
  coverage: pip install -e {toxinidir}/ext/opentelemetry-ext-http-requests
  coverage: pip install -e {toxinidir}/ext/opentelemetry-ext-jaeger
  coverage: pip install -e {toxinidir}/ext/opentelemetry-ext-opentracing-shim
  coverage: pip install -e {toxinidir}/ext/opentelemetry-ext-testutil
  coverage: pip install -e {toxinidir}/ext/opentelemetry-ext-wsgi
  coverage: pip install -e {toxinidir}/ext/opentelemetry-ext-flask[test]
  coverage: pip install -e {toxinidir}/examples/opentelemetry-example-app

; Using file:// here because otherwise tox invokes just "pip install
; opentelemetry-api", leading to an error
  mypyinstalled: pip install file://{toxinidir}/opentelemetry-api/

commands =
  test: pytest
  coverage: {toxinidir}/scripts/coverage.sh

  mypy: mypy --namespace-packages opentelemetry-api/src/opentelemetry/
; For test code, we don't want to enforce the full mypy strictness
  mypy: mypy --namespace-packages --config-file=mypy-relaxed.ini opentelemetry-api/tests/

; Test that mypy can pick up typeinfo from an installed package (otherwise,
; implicit Any due to unfollowed import would result).
  mypyinstalled: mypy --namespace-packages opentelemetry-api/tests/mypysmoke.py --strict


[testenv:lint]
basepython: python3.7
recreate = True
deps =
  pylint~=2.3
  flake8~=3.7
  isort~=4.3
  black>=19.3b0,==19.*

commands_pre =
  pip install -e {toxinidir}/opentelemetry-api
  pip install -e {toxinidir}/opentelemetry-sdk
  pip install -e {toxinidir}/ext/opentelemetry-ext-http-requests
  pip install -e {toxinidir}/ext/opentelemetry-ext-jaeger
  pip install -e {toxinidir}/ext/opentelemetry-ext-pymongo
  pip install -e {toxinidir}/ext/opentelemetry-ext-testutil
  pip install -e {toxinidir}/ext/opentelemetry-ext-wsgi
  pip install -e {toxinidir}/ext/opentelemetry-ext-flask[test]
  pip install -e {toxinidir}/examples/opentelemetry-example-app
  pip install -e {toxinidir}/ext/opentelemetry-ext-opentracing-shim

commands =
; Prefer putting everything in one pylint command to profit from duplication
; warnings.
  black --check --diff .
  pylint opentelemetry-api/src/opentelemetry \
         opentelemetry-api/tests/ \
         opentelemetry-sdk/src/opentelemetry \
         opentelemetry-sdk/tests/ \
         ext/opentelemetry-ext-http-requests/src/ \
         ext/opentelemetry-ext-http-requests/tests/ \
         ext/opentelemetry-ext-jaeger/src/opentelemetry \
         ext/opentelemetry-ext-jaeger/tests/ \
         ext/opentelemetry-ext-opentracing-shim/src/ \
         ext/opentelemetry-ext-opentracing-shim/tests/ \
         ext/opentelemetry-ext-pymongo/src/opentelemetry  \
         ext/opentelemetry-ext-pymongo/tests/ \
         ext/opentelemetry-ext-testutil/src/opentelemetry \
         ext/opentelemetry-ext-wsgi/src/ \
         ext/opentelemetry-ext-wsgi/tests/ \
         ext/opentelemetry-ext-flask/src/ \
         ext/opentelemetry-ext-flask/tests/ \
         examples/opentelemetry-example-app/src/opentelemetry_example_app/ \
         examples/opentelemetry-example-app/tests/ \
         examples/basic_tracer/ \
         examples/http/
  flake8 .
  isort --check-only --diff --recursive .

[testenv:docs]
deps =
  sphinx~=2.1
  sphinx-rtd-theme~=0.4
  sphinx-autodoc-typehints~=1.10.2
  opentracing~=2.2.0
  Deprecated>=1.2.6

changedir = docs

commands =
  sphinx-build -W --keep-going -b html -T . _build/html

[testenv:py37-tracecontext]
basepython: python3.7
deps =
  # needed for tracecontext
  aiohttp~=3.6
  # needed for example trace integration
  flask~=1.1
  requests~=2.7

commands_pre =
  pip install -e {toxinidir}/opentelemetry-api
  pip install -e {toxinidir}/opentelemetry-sdk
  pip install -e {toxinidir}/ext/opentelemetry-ext-http-requests
  pip install -e {toxinidir}/ext/opentelemetry-ext-wsgi
  pip install -e {toxinidir}/ext/opentelemetry-ext-flask

commands =
  {toxinidir}/scripts/tracecontext-integration-test.sh
