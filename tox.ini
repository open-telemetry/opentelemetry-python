[tox]
skipsdist = True
skip_missing_interpreters = True
envlist =
    ; Environments are organized by individual package, allowing
    ; for specifying supported Python versions per package.
    ; opentelemetry-api
    py3{5,6,7,8}-test-core-api
    pypy3-test-core-api

    ; opentelemetry-proto
    py3{5,6,7,8}-test-core-proto
    pypy3-test-core-proto

    ; opentelemetry-sdk
    py3{5,6,7,8}-test-core-sdk
    pypy3-test-core-sdk

    ; opentelemetry-instrumentation
    py3{5,6,7,8}-test-core-instrumentation
    pypy3-test-core-instrumentation

    ; docs/getting-started
    py3{5,6,7,8}-test-core-getting-started
    pypy3-test-core-getting-started

    ; opentelemetry-exporter-jaeger
    py3{5,6,7,8}-test-exporter-jaeger
    pypy3-test-exporter-jaeger

    ; opentelemetry-exporter-opencensus
    py3{5,6,7,8}-test-exporter-opencensus
    ; exporter-opencensus intentionally excluded from pypy3

    ; opentelemetry-exporter-otlp
    py3{5,6,7,8}-test-exporter-otlp
    ; exporter-otlp intentionally excluded from pypy3

    ; opentelemetry-exporter-prometheus
    py3{5,6,7,8}-test-exporter-prometheus
    pypy3-test-exporter-prometheus

    ; opentelemetry-exporter-zipkin
    py3{5,6,7,8}-test-exporter-zipkin
    pypy3-test-exporter-zipkin

    ; opentelemetry-opentracing-shim
    py3{5,6,7,8}-test-core-opentracing-shim
    pypy3-test-core-opentracing-shim

    lint
    py38-tracecontext
    py38-{mypy,mypyinstalled}
    docs
    docker-tests

[testenv]
deps =
  -c dev-requirements.txt
  test: pytest
  coverage: pytest
  coverage: pytest-cov
  mypy,mypyinstalled: mypy

setenv = mypy: MYPYPATH={toxinidir}/opentelemetry-api/src/

changedir =
  test-core-api: opentelemetry-api/tests
  test-core-sdk: opentelemetry-sdk/tests
  test-core-proto: opentelemetry-proto/tests
  test-core-instrumentation: opentelemetry-instrumentation/tests
  test-core-getting-started: docs/getting_started/tests
  test-core-opentracing-shim: instrumentation/opentelemetry-instrumentation-opentracing-shim/tests

  test-exporter-jaeger: exporter/opentelemetry-exporter-jaeger/tests
  test-exporter-opencensus: exporter/opentelemetry-exporter-opencensus/tests
  test-exporter-otlp: exporter/opentelemetry-exporter-otlp/tests
  test-exporter-prometheus: exporter/opentelemetry-exporter-prometheus/tests
  test-exporter-zipkin: exporter/opentelemetry-exporter-zipkin/tests

commands_pre =
; Install without -e to test the actual installation
  py3{5,6,7,8}: python -m pip install -U pip setuptools wheel
; Install common packages for all the tests. These are not needed in all the
; cases but it saves a lot of boilerplate in this file.
  test: pip install {toxinidir}/opentelemetry-api {toxinidir}/opentelemetry-sdk {toxinidir}/tests/util

  test-core-proto: pip install {toxinidir}/opentelemetry-proto
  instrumentation: pip install {toxinidir}/opentelemetry-instrumentation

  getting-started: pip install -e {toxinidir}/opentelemetry-instrumentation -e {toxinidir}/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-requests -e {toxinidir}/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-wsgi -e {toxinidir}/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-flask

  opencensus: pip install {toxinidir}/exporter/opentelemetry-exporter-opencensus

  otlp: pip install {toxinidir}/opentelemetry-proto
  otlp: pip install {toxinidir}/exporter/opentelemetry-exporter-otlp

  prometheus: pip install {toxinidir}/exporter/opentelemetry-exporter-prometheus

  jaeger: pip install {toxinidir}/exporter/opentelemetry-exporter-jaeger

  opentracing-shim: pip install {toxinidir}/opentelemetry-sdk
  opentracing-shim: pip install {toxinidir}/instrumentation/opentelemetry-instrumentation-opentracing-shim

  zipkin: pip install {toxinidir}/exporter/opentelemetry-exporter-zipkin

; In order to get a healthy coverage report,
; we have to install packages in editable mode.
  coverage: python {toxinidir}/scripts/eachdist.py install --editable

; Using file:// here because otherwise tox invokes just "pip install
; opentelemetry-api", leading to an error
  mypyinstalled: pip install file://{toxinidir}/opentelemetry-api/

commands =
  test: pytest {posargs}
  coverage: {toxinidir}/scripts/coverage.sh

  mypy: mypy --namespace-packages opentelemetry-api/src/opentelemetry/
; For test code, we don't want to enforce the full mypy strictness
  mypy: mypy --namespace-packages --config-file=mypy-relaxed.ini opentelemetry-api/tests/

; Test that mypy can pick up typeinfo from an installed package (otherwise,
; implicit Any due to unfollowed import would result).
  mypyinstalled: mypy --namespace-packages opentelemetry-api/tests/mypysmoke.py --strict

[testenv:lint]
basepython: python3.8
recreate = True
deps =
  -c dev-requirements.txt
  asgiref
  pylint
  flake8
  isort
  black
  psutil
  readme_renderer
  httpretty

commands_pre =
  python -m pip install -e {toxinidir}/opentelemetry-api[test]
  python -m pip install -e {toxinidir}/opentelemetry-sdk[test]
  python -m pip install -e {toxinidir}/opentelemetry-instrumentation[test]
  python -m pip install -e {toxinidir}/opentelemetry-proto[test]
  python -m pip install -e {toxinidir}/tests/util[test]
  python -m pip install -e {toxinidir}/instrumentation/opentelemetry-instrumentation-opentracing-shim[test]
  python -m pip install -e {toxinidir}/exporter/opentelemetry-exporter-jaeger[test]
  python -m pip install -e {toxinidir}/exporter/opentelemetry-exporter-opencensus[test]
  python -m pip install -e {toxinidir}/exporter/opentelemetry-exporter-otlp[test]
  python -m pip install -e {toxinidir}/exporter/opentelemetry-exporter-prometheus[test]
  python -m pip install -e {toxinidir}/exporter/opentelemetry-exporter-zipkin[test]

commands =
  python scripts/eachdist.py lint --check-only

[testenv:docs]
deps =
  -c {toxinidir}/dev-requirements.txt
  -r {toxinidir}/docs-requirements.txt

changedir = docs

commands =
  sphinx-build -E -a -W -b html -T . _build/html

[testenv:py38-tracecontext]
basepython: python3.8
deps =
  # needed for tracecontext
  aiohttp~=3.6
  # needed for example trace integration
  flask~=1.1
  requests~=2.7

commands_pre =
  pip install -e {toxinidir}/opentelemetry-api \
              -e {toxinidir}/opentelemetry-sdk \
              -e {toxinidir}/opentelemetry-instrumentation \
              -e {toxinidir}/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-requests \
              -e {toxinidir}/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-wsgi

commands =
  {toxinidir}/scripts/tracecontext-integration-test.sh

[testenv:docker-tests]
deps =
  pytest
  docker-compose >= 1.25.2

changedir =
  tests/opentelemetry-docker-tests/tests

commands_pre =
  pip install -e {toxinidir}/opentelemetry-api \
              -e {toxinidir}/opentelemetry-sdk \
              -e {toxinidir}/tests/util \
              -e {toxinidir}/exporter/opentelemetry-exporter-opencensus
  docker-compose up -d	
commands =
  pytest {posargs}
commands_post =
  docker-compose down -v
