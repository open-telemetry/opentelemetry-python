[tox]
skipsdist = True
skip_missing_interpreters = True
envlist =
    ; Environments are organized by individual package, allowing
    ; for specifying supported Python versions per package.
    ; opentelemetry-api
    py3{4,5,6,7,8}-test-api
    pypy3-test-api

    ; opentelemetry-sdk
    py3{4,5,6,7,8}-test-sdk
    pypy3-test-sdk

    ; opentelemetry-auto-instrumentation
    py3{4,5,6,7,8}-test-auto-instrumentation
    pypy3-test-auto-instrumentation

    ; opentelemetry-example-app
    py3{4,5,6,7,8}-test-example-app
    pypy3-test-example-app

    ; docs/examples/basic_tracer
    py3{4,5,6,7,8}-test-example-basic-tracer
    pypy3-test-example-basic-tracer

    ; docs/examples/http
    py3{4,5,6,7,8}-test-example-http
    pypy3-test-example-http

    ; opentelemetry-ext-dbapi
    py3{4,5,6,7,8}-test-ext-dbapi
    pypy3-test-ext-dbapi

    ; opentelemetry-ext-flask
    py3{4,5,6,7,8}-test-ext-flask
    pypy3-test-ext-flask

    ; opentelemetry-ext-requests
    py3{4,5,6,7,8}-test-ext-requests
    pypy3-test-ext-requests

    ; opentelemetry-ext-jaeger
    py3{4,5,6,7,8}-test-ext-jaeger
    pypy3-test-ext-jaeger

    ; opentelemetry-ext-mysql
    py3{4,5,6,7,8}-test-ext-mysql
    pypy3-test-ext-mysql

    ; opentelemetry-ext-otcollector
    py3{4,5,6,7,8}-test-ext-otcollector
    ; ext-otcollector intentionally excluded from pypy3

    ; opentelemetry-ext-prometheus
    py3{4,5,6,7,8}-test-ext-prometheus
    pypy3-test-ext-prometheus

    ; opentelemetry-ext-psycopg2
    py3{4,5,6,7,8}-test-ext-psycopg2
    ; ext-psycopg2 intentionally excluded from pypy3

    ; opentelemetry-ext-pymongo
    py3{4,5,6,7,8}-test-ext-pymongo
    pypy3-test-ext-pymongo

    ; opentelemetry-ext-pymysql
    py3{4,5,6,7,8}-test-ext-pymysql
    pypy3-test-ext-pymysql

    ; opentelemetry-ext-wsgi
    py3{4,5,6,7,8}-test-ext-wsgi
    pypy3-test-ext-wsgi

    ; opentelemetry-ext-zipkin
    py3{4,5,6,7,8}-test-ext-zipkin
    pypy3-test-ext-zipkin

    ; opentelemetry-opentracing-shim
    py3{4,5,6,7,8}-test-opentracing-shim
    pypy3-test-opentracing-shim

    ; opentelemetry-opentracing-shim
    py3{4,5,6,7,8}-test-opentracing-shim
    pypy3-test-opentracing-shim

    ; opentelemetry-ext-grpc
    py3{4,5,6,7,8}-test-ext-grpc

    ; opentelemetry-ext-sqlalchemy
    py3{4,5,6,7,8}-test-ext-sqlalchemy
    pypy3-test-ext-sqlalchemy

    ; opentelemetry-ext-redis
    py3{4,5,6,7,8}-test-ext-redis
    pypy3-test-ext-redis

    ; Coverage is temporarily disabled for pypy3 due to the pytest bug.
    ; pypy3-coverage

    lint
    py38-tracecontext
    py38-{mypy,mypyinstalled}
    docs
    docker-tests

[travis]
python =
  3.8: py38, lint, docs, docker-tests

[testenv]
deps =
  -c dev-requirements.txt
  test: pytest
  coverage: pytest
  coverage: pytest-cov
  mypy,mypyinstalled: mypy

setenv =
  mypy: MYPYPATH={toxinidir}/opentelemetry-api/src/

changedir =
  test-api: opentelemetry-api/tests
  test-sdk: opentelemetry-sdk/tests
  test-auto-instrumentation: opentelemetry-auto-instrumentation/tests
  test-ext-grpc: ext/opentelemetry-ext-grpc/tests
  test-ext-requests: ext/opentelemetry-ext-requests/tests
  test-ext-jaeger: ext/opentelemetry-ext-jaeger/tests
  test-ext-dbapi: ext/opentelemetry-ext-dbapi/tests
  test-ext-mysql: ext/opentelemetry-ext-mysql/tests
  test-ext-otcollector: ext/opentelemetry-ext-otcollector/tests
  test-ext-prometheus: ext/opentelemetry-ext-prometheus/tests
  test-ext-pymongo: ext/opentelemetry-ext-pymongo/tests
  test-ext-psycopg2: ext/opentelemetry-ext-psycopg2/tests
  test-ext-pymysql: ext/opentelemetry-ext-pymysql/tests
  test-ext-wsgi: ext/opentelemetry-ext-wsgi/tests
  test-ext-zipkin: ext/opentelemetry-ext-zipkin/tests
  test-ext-flask: ext/opentelemetry-ext-flask/tests
  test-example-app: docs/examples/opentelemetry-example-app/tests
  test-example-basic-tracer: docs/examples/basic_tracer/tests
  test-example-http: docs/examples/http/tests
  test-opentracing-shim: ext/opentelemetry-ext-opentracing-shim/tests
  test-ext-sqlalchemy: ext/opentelemetry-ext-sqlalchemy/tests
  test-ext-redis: ext/opentelemetry-ext-redis/tests

commands_pre =
; Install without -e to test the actual installation
  python -m pip install -U pip setuptools wheel

; Install common packages for all the tests. These are not needed in all the
; cases but it saves a lot of boilerplate in this file.
  test: pip install {toxinidir}/opentelemetry-api
  test: pip install {toxinidir}/opentelemetry-sdk
  test: pip install {toxinidir}/tests/util

  test-auto-instrumentation: pip install {toxinidir}/opentelemetry-auto-instrumentation

  example-app: pip install {toxinidir}/opentelemetry-auto-instrumentation
  example-app: pip install {toxinidir}/ext/opentelemetry-ext-requests
  example-app: pip install {toxinidir}/ext/opentelemetry-ext-wsgi
  example-app: pip install {toxinidir}/ext/opentelemetry-ext-flask
  example-app: pip install {toxinidir}/docs/examples/opentelemetry-example-app

  example-http: pip install -e {toxinidir}/opentelemetry-auto-instrumentation
  example-http: pip install -e {toxinidir}/ext/opentelemetry-ext-requests
  example-http: pip install -e {toxinidir}/ext/opentelemetry-ext-wsgi
  example-http: pip install -r {toxinidir}/docs/examples/http/requirements.txt

  grpc: pip install {toxinidir}/ext/opentelemetry-ext-grpc[test]

  wsgi,flask: pip install {toxinidir}/ext/opentelemetry-ext-wsgi

  flask: pip install {toxinidir}/opentelemetry-auto-instrumentation
  flask: pip install {toxinidir}/ext/opentelemetry-ext-flask[test]

  dbapi: pip install {toxinidir}/ext/opentelemetry-ext-dbapi[test]

  mysql: pip install {toxinidir}/ext/opentelemetry-ext-dbapi
  mysql: pip install {toxinidir}/ext/opentelemetry-ext-mysql[test]

  otcollector: pip install {toxinidir}/ext/opentelemetry-ext-otcollector

  prometheus: pip install {toxinidir}/ext/opentelemetry-ext-prometheus

  pymongo: pip install {toxinidir}/opentelemetry-auto-instrumentation
  pymongo: pip install {toxinidir}/ext/opentelemetry-ext-pymongo[test]

  psycopg2: pip install {toxinidir}/ext/opentelemetry-ext-dbapi
  psycopg2: pip install {toxinidir}/ext/opentelemetry-ext-psycopg2

  pymysql: pip install {toxinidir}/opentelemetry-auto-instrumentation
  pymysql: pip install {toxinidir}/ext/opentelemetry-ext-dbapi
  pymysql: pip install {toxinidir}/ext/opentelemetry-ext-pymysql[test]

  redis: pip install {toxinidir}/opentelemetry-auto-instrumentation
  redis: pip install {toxinidir}/ext/opentelemetry-ext-redis[test]

  requests: pip install {toxinidir}/opentelemetry-auto-instrumentation
  requests: pip install {toxinidir}/ext/opentelemetry-ext-requests[test]

  jaeger: pip install {toxinidir}/ext/opentelemetry-ext-jaeger

  opentracing-shim: pip install {toxinidir}/ext/opentelemetry-ext-opentracing-shim

  zipkin: pip install {toxinidir}/ext/opentelemetry-ext-zipkin

  sqlalchemy: pip install {toxinidir}/opentelemetry-auto-instrumentation
  sqlalchemy: pip install {toxinidir}/ext/opentelemetry-ext-sqlalchemy

; In order to get a healthy coverage report,
; we have to install packages in editable mode.
  coverage: python {toxinidir}/scripts/eachdist.py install --editable

; Using file:// here because otherwise tox invokes just "pip install
; opentelemetry-api", leading to an error
  mypyinstalled: pip install file://{toxinidir}/opentelemetry-api/

commands =
  test: pytest {posargs}
  coverage: {toxinidir}/scripts/coverage.sh

  mypy: mypy --namespace-packages opentelemetry-api/src/opentelemetry/
; For test code, we don't want to enforce the full mypy strictness
  mypy: mypy --namespace-packages --config-file=mypy-relaxed.ini opentelemetry-api/tests/

; Test that mypy can pick up typeinfo from an installed package (otherwise,
; implicit Any due to unfollowed import would result).
  mypyinstalled: mypy --namespace-packages opentelemetry-api/tests/mypysmoke.py --strict


[testenv:lint]
basepython: python3.8
recreate = True
deps =
  -c dev-requirements.txt
  pylint
  flake8
  isort
  black
  psutil
  readme_renderer
  httpretty

commands_pre =
  python scripts/eachdist.py install --editable

commands =
  python scripts/eachdist.py lint --check-only

[testenv:docs]
deps =
  -c dev-requirements.txt
  -r docs-requirements.txt

changedir = docs

commands =
  sphinx-build -E -a --keep-going -b html -T . _build/html

[testenv:py38-tracecontext]
basepython: python3.8
deps =
  # needed for tracecontext
  aiohttp~=3.6
  # needed for example trace integration
  flask~=1.1
  requests~=2.7

commands_pre =
  pip install -e {toxinidir}/opentelemetry-api \
              -e {toxinidir}/opentelemetry-auto-instrumentation \
              -e {toxinidir}/opentelemetry-sdk \
              -e {toxinidir}/opentelemetry-auto-instrumentation \
              -e {toxinidir}/ext/opentelemetry-ext-requests \
              -e {toxinidir}/ext/opentelemetry-ext-wsgi \
              -e {toxinidir}/ext/opentelemetry-ext-flask

commands =
  {toxinidir}/scripts/tracecontext-integration-test.sh

[testenv:docker-tests]
deps =
  pytest
  docker-compose >= 1.25.2
  mysql-connector-python ~=  8.0
  pymongo ~= 3.1
  pymysql ~= 0.9.3
  psycopg2-binary ~= 2.8.4
  sqlalchemy ~= 1.3.16
  redis ~= 3.3.11

changedir =
  ext/opentelemetry-ext-docker-tests/tests

commands_pre =
  pip install -e {toxinidir}/opentelemetry-api \
              -e {toxinidir}/opentelemetry-sdk \
              -e {toxinidir}/opentelemetry-auto-instrumentation \
              -e {toxinidir}/tests/util \
              -e {toxinidir}/ext/opentelemetry-ext-dbapi \
              -e {toxinidir}/ext/opentelemetry-ext-mysql \
              -e {toxinidir}/ext/opentelemetry-ext-psycopg2 \
              -e {toxinidir}/ext/opentelemetry-ext-pymongo \
              -e {toxinidir}/ext/opentelemetry-ext-pymysql \
              -e {toxinidir}/ext/opentelemetry-ext-sqlalchemy \
              -e {toxinidir}/ext/opentelemetry-ext-redis
  docker-compose up -d
  python check_availability.py
commands =
  pytest {posargs}

commands_post =
  docker-compose down
