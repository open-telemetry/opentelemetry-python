# Copyright The OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



{%- macro print_value(type, value) -%}
    {{ "\"" if type == "string"}}{{value}}{{ "\"" if type == "string"}}
{%- endmacro %}

from enum import Enum

class {{class}}:
    {%- for attribute in attributes | unique(attribute="fqn") %}
    {{attribute.fqn | to_const_name}} = "{{attribute.fqn}}"
    """
    {{attribute.brief | to_doc_brief}}.

    {%- if attribute.note %}
    Note: {{attribute.note | to_doc_brief}}.
    {%- endif %}

    {%- if attribute.deprecated %}
    Deprecated: {{attribute.deprecated | to_doc_brief}}.
    {%- endif %}
    """
{# Extra line #}
    {%- endfor %}

{%- for attribute in attributes | unique(attribute="fqn") %}
{%- if attribute.is_enum %}
{%- set class_name = attribute.fqn | to_camelcase(True) ~ "Values" %}
{%- set type = attribute.attr_type.enum_type %}
class {{class_name}}(Enum):
    {%- for member in attribute.attr_type.members %}
    {{ member.member_id | to_const_name }} = {{ print_value(type, member.value) }}
    """{% filter escape %}{{member.brief | to_doc_brief}}.{% endfilter %}"""
{# Extra line #}
    {%- endfor %}
{% endif %}
{%- endfor %}
