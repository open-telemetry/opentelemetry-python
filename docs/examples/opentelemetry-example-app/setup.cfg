# Copyright The OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
[metadata]
name = opentelemetry-example-app
description = OpenTelemetry Example App
long_description = file: README.rst
long_description_content_type = text/x-rst
author = OpenTelemetry Authors
author_email = cncf-opentelemetry-contributors@lists.cncf.io
url = https://github.com/open-telemetry/opentelemetry-python/tree/master/opentelemetry-example-app
platforms = any
license = Apache-2.0
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
python_requires = >=3.4
package_dir=
    =src
packages = find_namespace:
zip_safe = False
include_package_data = True
install_requires = 
    typing; python_version<'3.5'
    opentelemetry-api == 0.10.dev0
    opentelemetry-sdk == 0.10.dev0
    opentelemetry-ext-requests == 0.10.dev0
    opentelemetry-ext-flask == 0.10.dev0
    flask
    requests
    protobuf~=3.11

[options.packages.find]
where = src
include = opentelemetry_example_app

[options.entry_points]
opentelemetry_meter_provider =
    sdk_meter_provider = opentelemetry.sdk.metrics:MeterProvider
opentelemetry_tracer_provider =
    sdk_tracer_provider = opentelemetry.sdk.trace:TracerProvider
